/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-02-15 17:18:02 UTC)
 * on 2017-03-19 at 23:03:29 UTC 
 * Modify at your own risk.
 */

package com.appspot.tayyar_trial.orderAPI;

/**
 * Service definition for OrderAPI (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link OrderAPIRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class OrderAPI extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the orderAPI library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://tayyar-trial.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "orderAPI/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public OrderAPI(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  OrderAPI(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "confirmPickUp".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link ConfirmPickUp#execute()} method to invoke the remote operation.
   *
   * @param deliveryRequestID
   * @return the request
   */
  public ConfirmPickUp confirmPickUp(java.lang.String deliveryRequestID) throws java.io.IOException {
    ConfirmPickUp result = new ConfirmPickUp(deliveryRequestID);
    initialize(result);
    return result;
  }

  public class ConfirmPickUp extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest> {

    private static final String REST_PATH = "confirmPickUp";

    /**
     * Create a request for the method "confirmPickUp".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link ConfirmPickUp#execute()} method to invoke the remote
     * operation. <p> {@link ConfirmPickUp#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param deliveryRequestID
     * @since 1.13
     */
    protected ConfirmPickUp(java.lang.String deliveryRequestID) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest.class);
      this.deliveryRequestID = com.google.api.client.util.Preconditions.checkNotNull(deliveryRequestID, "Required parameter deliveryRequestID must be specified.");
    }

    @Override
    public ConfirmPickUp setAlt(java.lang.String alt) {
      return (ConfirmPickUp) super.setAlt(alt);
    }

    @Override
    public ConfirmPickUp setFields(java.lang.String fields) {
      return (ConfirmPickUp) super.setFields(fields);
    }

    @Override
    public ConfirmPickUp setKey(java.lang.String key) {
      return (ConfirmPickUp) super.setKey(key);
    }

    @Override
    public ConfirmPickUp setOauthToken(java.lang.String oauthToken) {
      return (ConfirmPickUp) super.setOauthToken(oauthToken);
    }

    @Override
    public ConfirmPickUp setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ConfirmPickUp) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ConfirmPickUp setQuotaUser(java.lang.String quotaUser) {
      return (ConfirmPickUp) super.setQuotaUser(quotaUser);
    }

    @Override
    public ConfirmPickUp setUserIp(java.lang.String userIp) {
      return (ConfirmPickUp) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String deliveryRequestID;

    /**

     */
    public java.lang.String getDeliveryRequestID() {
      return deliveryRequestID;
    }

    public ConfirmPickUp setDeliveryRequestID(java.lang.String deliveryRequestID) {
      this.deliveryRequestID = deliveryRequestID;
      return this;
    }

    @Override
    public ConfirmPickUp set(String parameterName, Object value) {
      return (ConfirmPickUp) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createDriver".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link CreateDriver#execute()} method to invoke the remote operation.
   *
   * @param city
   * @param email
   * @param imageURL
   * @param name
   * @param password
   * @param phone
   * @param vehicle
   * @return the request
   */
  public CreateDriver createDriver(java.lang.String city, java.lang.String email, java.lang.String imageURL, java.lang.String name, java.lang.String password, java.lang.String phone, java.lang.String vehicle) throws java.io.IOException {
    CreateDriver result = new CreateDriver(city, email, imageURL, name, password, phone, vehicle);
    initialize(result);
    return result;
  }

  public class CreateDriver extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.Driver> {

    private static final String REST_PATH = "createDriver";

    /**
     * Create a request for the method "createDriver".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link CreateDriver#execute()} method to invoke the remote
     * operation. <p> {@link
     * CreateDriver#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param city
     * @param email
     * @param imageURL
     * @param name
     * @param password
     * @param phone
     * @param vehicle
     * @since 1.13
     */
    protected CreateDriver(java.lang.String city, java.lang.String email, java.lang.String imageURL, java.lang.String name, java.lang.String password, java.lang.String phone, java.lang.String vehicle) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.Driver.class);
      this.city = com.google.api.client.util.Preconditions.checkNotNull(city, "Required parameter city must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.imageURL = com.google.api.client.util.Preconditions.checkNotNull(imageURL, "Required parameter imageURL must be specified.");
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.vehicle = com.google.api.client.util.Preconditions.checkNotNull(vehicle, "Required parameter vehicle must be specified.");
    }

    @Override
    public CreateDriver setAlt(java.lang.String alt) {
      return (CreateDriver) super.setAlt(alt);
    }

    @Override
    public CreateDriver setFields(java.lang.String fields) {
      return (CreateDriver) super.setFields(fields);
    }

    @Override
    public CreateDriver setKey(java.lang.String key) {
      return (CreateDriver) super.setKey(key);
    }

    @Override
    public CreateDriver setOauthToken(java.lang.String oauthToken) {
      return (CreateDriver) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateDriver setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateDriver) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateDriver setQuotaUser(java.lang.String quotaUser) {
      return (CreateDriver) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateDriver setUserIp(java.lang.String userIp) {
      return (CreateDriver) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String city;

    /**

     */
    public java.lang.String getCity() {
      return city;
    }

    public CreateDriver setCity(java.lang.String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public CreateDriver setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public CreateDriver setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateDriver setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public CreateDriver setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public CreateDriver setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String vehicle;

    /**

     */
    public java.lang.String getVehicle() {
      return vehicle;
    }

    public CreateDriver setVehicle(java.lang.String vehicle) {
      this.vehicle = vehicle;
      return this;
    }

    @Override
    public CreateDriver set(String parameterName, Object value) {
      return (CreateDriver) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createOrder".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link CreateOrder#execute()} method to invoke the remote operation.
   *
   * @param choicesIDsArray
   * @param instructions
   * @param itemID
   * @param itemsNumber
   * @return the request
   */
  public CreateOrder createOrder(java.util.List<java.lang.String> choicesIDsArray, java.lang.String instructions, java.lang.String itemID, java.lang.Integer itemsNumber) throws java.io.IOException {
    CreateOrder result = new CreateOrder(choicesIDsArray, instructions, itemID, itemsNumber);
    initialize(result);
    return result;
  }

  public class CreateOrder extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.Order> {

    private static final String REST_PATH = "createOrder";

    /**
     * Create a request for the method "createOrder".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link CreateOrder#execute()} method to invoke the remote
     * operation. <p> {@link
     * CreateOrder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param choicesIDsArray
     * @param instructions
     * @param itemID
     * @param itemsNumber
     * @since 1.13
     */
    protected CreateOrder(java.util.List<java.lang.String> choicesIDsArray, java.lang.String instructions, java.lang.String itemID, java.lang.Integer itemsNumber) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.Order.class);
      this.choicesIDsArray = com.google.api.client.util.Preconditions.checkNotNull(choicesIDsArray, "Required parameter choicesIDsArray must be specified.");
      this.instructions = com.google.api.client.util.Preconditions.checkNotNull(instructions, "Required parameter instructions must be specified.");
      this.itemID = com.google.api.client.util.Preconditions.checkNotNull(itemID, "Required parameter itemID must be specified.");
      this.itemsNumber = com.google.api.client.util.Preconditions.checkNotNull(itemsNumber, "Required parameter itemsNumber must be specified.");
    }

    @Override
    public CreateOrder setAlt(java.lang.String alt) {
      return (CreateOrder) super.setAlt(alt);
    }

    @Override
    public CreateOrder setFields(java.lang.String fields) {
      return (CreateOrder) super.setFields(fields);
    }

    @Override
    public CreateOrder setKey(java.lang.String key) {
      return (CreateOrder) super.setKey(key);
    }

    @Override
    public CreateOrder setOauthToken(java.lang.String oauthToken) {
      return (CreateOrder) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateOrder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateOrder setQuotaUser(java.lang.String quotaUser) {
      return (CreateOrder) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateOrder setUserIp(java.lang.String userIp) {
      return (CreateOrder) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> choicesIDsArray;

    /**

     */
    public java.util.List<java.lang.String> getChoicesIDsArray() {
      return choicesIDsArray;
    }

    public CreateOrder setChoicesIDsArray(java.util.List<java.lang.String> choicesIDsArray) {
      this.choicesIDsArray = choicesIDsArray;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String instructions;

    /**

     */
    public java.lang.String getInstructions() {
      return instructions;
    }

    public CreateOrder setInstructions(java.lang.String instructions) {
      this.instructions = instructions;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String itemID;

    /**

     */
    public java.lang.String getItemID() {
      return itemID;
    }

    public CreateOrder setItemID(java.lang.String itemID) {
      this.itemID = itemID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer itemsNumber;

    /**

     */
    public java.lang.Integer getItemsNumber() {
      return itemsNumber;
    }

    public CreateOrder setItemsNumber(java.lang.Integer itemsNumber) {
      this.itemsNumber = itemsNumber;
      return this;
    }

    @Override
    public CreateOrder set(String parameterName, Object value) {
      return (CreateOrder) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "driverRefusesOrder".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link DriverRefusesOrder#execute()} method to invoke the remote operation.
   *
   * @param deliveryRequestID
   * @param driverID
   * @return the request
   */
  public DriverRefusesOrder driverRefusesOrder(java.lang.String deliveryRequestID, java.lang.String driverID) throws java.io.IOException {
    DriverRefusesOrder result = new DriverRefusesOrder(deliveryRequestID, driverID);
    initialize(result);
    return result;
  }

  public class DriverRefusesOrder extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest> {

    private static final String REST_PATH = "driverRefusesOrder";

    /**
     * Create a request for the method "driverRefusesOrder".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link DriverRefusesOrder#execute()} method to invoke the remote
     * operation. <p> {@link DriverRefusesOrder#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param deliveryRequestID
     * @param driverID
     * @since 1.13
     */
    protected DriverRefusesOrder(java.lang.String deliveryRequestID, java.lang.String driverID) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest.class);
      this.deliveryRequestID = com.google.api.client.util.Preconditions.checkNotNull(deliveryRequestID, "Required parameter deliveryRequestID must be specified.");
      this.driverID = com.google.api.client.util.Preconditions.checkNotNull(driverID, "Required parameter driverID must be specified.");
    }

    @Override
    public DriverRefusesOrder setAlt(java.lang.String alt) {
      return (DriverRefusesOrder) super.setAlt(alt);
    }

    @Override
    public DriverRefusesOrder setFields(java.lang.String fields) {
      return (DriverRefusesOrder) super.setFields(fields);
    }

    @Override
    public DriverRefusesOrder setKey(java.lang.String key) {
      return (DriverRefusesOrder) super.setKey(key);
    }

    @Override
    public DriverRefusesOrder setOauthToken(java.lang.String oauthToken) {
      return (DriverRefusesOrder) super.setOauthToken(oauthToken);
    }

    @Override
    public DriverRefusesOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DriverRefusesOrder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DriverRefusesOrder setQuotaUser(java.lang.String quotaUser) {
      return (DriverRefusesOrder) super.setQuotaUser(quotaUser);
    }

    @Override
    public DriverRefusesOrder setUserIp(java.lang.String userIp) {
      return (DriverRefusesOrder) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String deliveryRequestID;

    /**

     */
    public java.lang.String getDeliveryRequestID() {
      return deliveryRequestID;
    }

    public DriverRefusesOrder setDeliveryRequestID(java.lang.String deliveryRequestID) {
      this.deliveryRequestID = deliveryRequestID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String driverID;

    /**

     */
    public java.lang.String getDriverID() {
      return driverID;
    }

    public DriverRefusesOrder setDriverID(java.lang.String driverID) {
      this.driverID = driverID;
      return this;
    }

    @Override
    public DriverRefusesOrder set(String parameterName, Object value) {
      return (DriverRefusesOrder) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDeliveryRequestByID".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link GetDeliveryRequestByID#execute()} method to invoke the remote
   * operation.
   *
   * @param deliveryRequestID
   * @return the request
   */
  public GetDeliveryRequestByID getDeliveryRequestByID(java.lang.String deliveryRequestID) throws java.io.IOException {
    GetDeliveryRequestByID result = new GetDeliveryRequestByID(deliveryRequestID);
    initialize(result);
    return result;
  }

  public class GetDeliveryRequestByID extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest> {

    private static final String REST_PATH = "getDeliveryRequestByID";

    /**
     * Create a request for the method "getDeliveryRequestByID".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link GetDeliveryRequestByID#execute()} method to invoke the
     * remote operation. <p> {@link GetDeliveryRequestByID#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param deliveryRequestID
     * @since 1.13
     */
    protected GetDeliveryRequestByID(java.lang.String deliveryRequestID) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest.class);
      this.deliveryRequestID = com.google.api.client.util.Preconditions.checkNotNull(deliveryRequestID, "Required parameter deliveryRequestID must be specified.");
    }

    @Override
    public GetDeliveryRequestByID setAlt(java.lang.String alt) {
      return (GetDeliveryRequestByID) super.setAlt(alt);
    }

    @Override
    public GetDeliveryRequestByID setFields(java.lang.String fields) {
      return (GetDeliveryRequestByID) super.setFields(fields);
    }

    @Override
    public GetDeliveryRequestByID setKey(java.lang.String key) {
      return (GetDeliveryRequestByID) super.setKey(key);
    }

    @Override
    public GetDeliveryRequestByID setOauthToken(java.lang.String oauthToken) {
      return (GetDeliveryRequestByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDeliveryRequestByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDeliveryRequestByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDeliveryRequestByID setQuotaUser(java.lang.String quotaUser) {
      return (GetDeliveryRequestByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDeliveryRequestByID setUserIp(java.lang.String userIp) {
      return (GetDeliveryRequestByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String deliveryRequestID;

    /**

     */
    public java.lang.String getDeliveryRequestID() {
      return deliveryRequestID;
    }

    public GetDeliveryRequestByID setDeliveryRequestID(java.lang.String deliveryRequestID) {
      this.deliveryRequestID = deliveryRequestID;
      return this;
    }

    @Override
    public GetDeliveryRequestByID set(String parameterName, Object value) {
      return (GetDeliveryRequestByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDriverByID".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link GetDriverByID#execute()} method to invoke the remote operation.
   *
   * @param driverID
   * @return the request
   */
  public GetDriverByID getDriverByID(java.lang.String driverID) throws java.io.IOException {
    GetDriverByID result = new GetDriverByID(driverID);
    initialize(result);
    return result;
  }

  public class GetDriverByID extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.Driver> {

    private static final String REST_PATH = "getDriverByID";

    /**
     * Create a request for the method "getDriverByID".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link GetDriverByID#execute()} method to invoke the remote
     * operation. <p> {@link GetDriverByID#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param driverID
     * @since 1.13
     */
    protected GetDriverByID(java.lang.String driverID) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.Driver.class);
      this.driverID = com.google.api.client.util.Preconditions.checkNotNull(driverID, "Required parameter driverID must be specified.");
    }

    @Override
    public GetDriverByID setAlt(java.lang.String alt) {
      return (GetDriverByID) super.setAlt(alt);
    }

    @Override
    public GetDriverByID setFields(java.lang.String fields) {
      return (GetDriverByID) super.setFields(fields);
    }

    @Override
    public GetDriverByID setKey(java.lang.String key) {
      return (GetDriverByID) super.setKey(key);
    }

    @Override
    public GetDriverByID setOauthToken(java.lang.String oauthToken) {
      return (GetDriverByID) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDriverByID setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDriverByID) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDriverByID setQuotaUser(java.lang.String quotaUser) {
      return (GetDriverByID) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDriverByID setUserIp(java.lang.String userIp) {
      return (GetDriverByID) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String driverID;

    /**

     */
    public java.lang.String getDriverID() {
      return driverID;
    }

    public GetDriverByID setDriverID(java.lang.String driverID) {
      this.driverID = driverID;
      return this;
    }

    @Override
    public GetDriverByID set(String parameterName, Object value) {
      return (GetDriverByID) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDriverByName".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link GetDriverByName#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public GetDriverByName getDriverByName(java.lang.String name) throws java.io.IOException {
    GetDriverByName result = new GetDriverByName(name);
    initialize(result);
    return result;
  }

  public class GetDriverByName extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.Driver> {

    private static final String REST_PATH = "getDriverByName";

    /**
     * Create a request for the method "getDriverByName".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link GetDriverByName#execute()} method to invoke the remote
     * operation. <p> {@link GetDriverByName#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected GetDriverByName(java.lang.String name) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.Driver.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public GetDriverByName setAlt(java.lang.String alt) {
      return (GetDriverByName) super.setAlt(alt);
    }

    @Override
    public GetDriverByName setFields(java.lang.String fields) {
      return (GetDriverByName) super.setFields(fields);
    }

    @Override
    public GetDriverByName setKey(java.lang.String key) {
      return (GetDriverByName) super.setKey(key);
    }

    @Override
    public GetDriverByName setOauthToken(java.lang.String oauthToken) {
      return (GetDriverByName) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDriverByName setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDriverByName) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDriverByName setQuotaUser(java.lang.String quotaUser) {
      return (GetDriverByName) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDriverByName setUserIp(java.lang.String userIp) {
      return (GetDriverByName) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public GetDriverByName setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public GetDriverByName set(String parameterName, Object value) {
      return (GetDriverByName) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTheNearestDriver".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link GetTheNearestDriver#execute()} method to invoke the remote operation.
   *
   * @param deliveryRequestID
   * @return the request
   */
  public GetTheNearestDriver getTheNearestDriver(java.lang.String deliveryRequestID) throws java.io.IOException {
    GetTheNearestDriver result = new GetTheNearestDriver(deliveryRequestID);
    initialize(result);
    return result;
  }

  public class GetTheNearestDriver extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest> {

    private static final String REST_PATH = "getTheNearestDriver";

    /**
     * Create a request for the method "getTheNearestDriver".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link GetTheNearestDriver#execute()} method to invoke the remote
     * operation. <p> {@link GetTheNearestDriver#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param deliveryRequestID
     * @since 1.13
     */
    protected GetTheNearestDriver(java.lang.String deliveryRequestID) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest.class);
      this.deliveryRequestID = com.google.api.client.util.Preconditions.checkNotNull(deliveryRequestID, "Required parameter deliveryRequestID must be specified.");
    }

    @Override
    public GetTheNearestDriver setAlt(java.lang.String alt) {
      return (GetTheNearestDriver) super.setAlt(alt);
    }

    @Override
    public GetTheNearestDriver setFields(java.lang.String fields) {
      return (GetTheNearestDriver) super.setFields(fields);
    }

    @Override
    public GetTheNearestDriver setKey(java.lang.String key) {
      return (GetTheNearestDriver) super.setKey(key);
    }

    @Override
    public GetTheNearestDriver setOauthToken(java.lang.String oauthToken) {
      return (GetTheNearestDriver) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTheNearestDriver setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTheNearestDriver) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTheNearestDriver setQuotaUser(java.lang.String quotaUser) {
      return (GetTheNearestDriver) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTheNearestDriver setUserIp(java.lang.String userIp) {
      return (GetTheNearestDriver) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String deliveryRequestID;

    /**

     */
    public java.lang.String getDeliveryRequestID() {
      return deliveryRequestID;
    }

    public GetTheNearestDriver setDeliveryRequestID(java.lang.String deliveryRequestID) {
      this.deliveryRequestID = deliveryRequestID;
      return this;
    }

    @Override
    public GetTheNearestDriver set(String parameterName, Object value) {
      return (GetTheNearestDriver) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sendDeliveryRequest".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link SendDeliveryRequest#execute()} method to invoke the remote operation.
   *
   * @param customerID
   * @param customerLocationID
   * @param restaurantID
   * @param content the {@link com.appspot.tayyar_trial.orderAPI.model.ListOfOrders}
   * @return the request
   */
  public SendDeliveryRequest sendDeliveryRequest(java.lang.String customerID, java.lang.String customerLocationID, java.lang.String restaurantID, com.appspot.tayyar_trial.orderAPI.model.ListOfOrders content) throws java.io.IOException {
    SendDeliveryRequest result = new SendDeliveryRequest(customerID, customerLocationID, restaurantID, content);
    initialize(result);
    return result;
  }

  public class SendDeliveryRequest extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest> {

    private static final String REST_PATH = "sendDeliveryRequest";

    /**
     * Create a request for the method "sendDeliveryRequest".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link SendDeliveryRequest#execute()} method to invoke the remote
     * operation. <p> {@link SendDeliveryRequest#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param customerID
     * @param customerLocationID
     * @param restaurantID
     * @param content the {@link com.appspot.tayyar_trial.orderAPI.model.ListOfOrders}
     * @since 1.13
     */
    protected SendDeliveryRequest(java.lang.String customerID, java.lang.String customerLocationID, java.lang.String restaurantID, com.appspot.tayyar_trial.orderAPI.model.ListOfOrders content) {
      super(OrderAPI.this, "POST", REST_PATH, content, com.appspot.tayyar_trial.orderAPI.model.DeliveryRequest.class);
      this.customerID = com.google.api.client.util.Preconditions.checkNotNull(customerID, "Required parameter customerID must be specified.");
      this.customerLocationID = com.google.api.client.util.Preconditions.checkNotNull(customerLocationID, "Required parameter customerLocationID must be specified.");
      this.restaurantID = com.google.api.client.util.Preconditions.checkNotNull(restaurantID, "Required parameter restaurantID must be specified.");
    }

    @Override
    public SendDeliveryRequest setAlt(java.lang.String alt) {
      return (SendDeliveryRequest) super.setAlt(alt);
    }

    @Override
    public SendDeliveryRequest setFields(java.lang.String fields) {
      return (SendDeliveryRequest) super.setFields(fields);
    }

    @Override
    public SendDeliveryRequest setKey(java.lang.String key) {
      return (SendDeliveryRequest) super.setKey(key);
    }

    @Override
    public SendDeliveryRequest setOauthToken(java.lang.String oauthToken) {
      return (SendDeliveryRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public SendDeliveryRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SendDeliveryRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SendDeliveryRequest setQuotaUser(java.lang.String quotaUser) {
      return (SendDeliveryRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public SendDeliveryRequest setUserIp(java.lang.String userIp) {
      return (SendDeliveryRequest) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String customerID;

    /**

     */
    public java.lang.String getCustomerID() {
      return customerID;
    }

    public SendDeliveryRequest setCustomerID(java.lang.String customerID) {
      this.customerID = customerID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String customerLocationID;

    /**

     */
    public java.lang.String getCustomerLocationID() {
      return customerLocationID;
    }

    public SendDeliveryRequest setCustomerLocationID(java.lang.String customerLocationID) {
      this.customerLocationID = customerLocationID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String restaurantID;

    /**

     */
    public java.lang.String getRestaurantID() {
      return restaurantID;
    }

    public SendDeliveryRequest setRestaurantID(java.lang.String restaurantID) {
      this.restaurantID = restaurantID;
      return this;
    }

    @Override
    public SendDeliveryRequest set(String parameterName, Object value) {
      return (SendDeliveryRequest) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateDriverState".
   *
   * This request holds the parameters needed by the orderAPI server.  After setting any optional
   * parameters, call the {@link UpdateDriverState#execute()} method to invoke the remote operation.
   *
   * @param driverID
   * @param idle
   * @return the request
   */
  public UpdateDriverState updateDriverState(java.lang.String driverID, java.lang.Boolean idle) throws java.io.IOException {
    UpdateDriverState result = new UpdateDriverState(driverID, idle);
    initialize(result);
    return result;
  }

  public class UpdateDriverState extends OrderAPIRequest<com.appspot.tayyar_trial.orderAPI.model.Driver> {

    private static final String REST_PATH = "updateDriverState";

    /**
     * Create a request for the method "updateDriverState".
     *
     * This request holds the parameters needed by the the orderAPI server.  After setting any
     * optional parameters, call the {@link UpdateDriverState#execute()} method to invoke the remote
     * operation. <p> {@link UpdateDriverState#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param driverID
     * @param idle
     * @since 1.13
     */
    protected UpdateDriverState(java.lang.String driverID, java.lang.Boolean idle) {
      super(OrderAPI.this, "POST", REST_PATH, null, com.appspot.tayyar_trial.orderAPI.model.Driver.class);
      this.driverID = com.google.api.client.util.Preconditions.checkNotNull(driverID, "Required parameter driverID must be specified.");
      this.idle = com.google.api.client.util.Preconditions.checkNotNull(idle, "Required parameter idle must be specified.");
    }

    @Override
    public UpdateDriverState setAlt(java.lang.String alt) {
      return (UpdateDriverState) super.setAlt(alt);
    }

    @Override
    public UpdateDriverState setFields(java.lang.String fields) {
      return (UpdateDriverState) super.setFields(fields);
    }

    @Override
    public UpdateDriverState setKey(java.lang.String key) {
      return (UpdateDriverState) super.setKey(key);
    }

    @Override
    public UpdateDriverState setOauthToken(java.lang.String oauthToken) {
      return (UpdateDriverState) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateDriverState setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateDriverState) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateDriverState setQuotaUser(java.lang.String quotaUser) {
      return (UpdateDriverState) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateDriverState setUserIp(java.lang.String userIp) {
      return (UpdateDriverState) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String driverID;

    /**

     */
    public java.lang.String getDriverID() {
      return driverID;
    }

    public UpdateDriverState setDriverID(java.lang.String driverID) {
      this.driverID = driverID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean idle;

    /**

     */
    public java.lang.Boolean getIdle() {
      return idle;
    }

    public UpdateDriverState setIdle(java.lang.Boolean idle) {
      this.idle = idle;
      return this;
    }

    @Override
    public UpdateDriverState set(String parameterName, Object value) {
      return (UpdateDriverState) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link OrderAPI}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link OrderAPI}. */
    @Override
    public OrderAPI build() {
      return new OrderAPI(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link OrderAPIRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setOrderAPIRequestInitializer(
        OrderAPIRequestInitializer orderapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(orderapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
